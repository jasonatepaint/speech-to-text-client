{"version":3,"file":"index.umd.js","sources":["../src/recorder.js","../src/renderer.js","../src/control.js","../src/client.js"],"sourcesContent":["/* globals AudioContext  */\n/* globals ttsAudio  */\n\nconst worker = new Worker('./worker.js');\nconst getUserMedia = require('getusermedia');\n\nclass Recorder {\n  constructor(source, visualizer) {\n    this.recording = false;\n    this.visualizer = visualizer;\n\n    // Create a ScriptProcessorNode with a bufferSize of 4096 and a single input and output channel\n    this.node = source.context.createScriptProcessor(4096, 1, 1);\n\n    let self = this;\n    worker.onmessage = function(message) {\n      let buffer = message.data;\n      if (buffer)\n        self.onChunkedAudio(buffer);\n    };\n\n    worker.postMessage({\n      command: 'init',\n      config: {\n        sampleRate: source.context.sampleRate,\n      }\n    });\n\n    this.clear();\n\n    /**\n     * The onaudioprocess event handler of the ScriptProcessorNode interface. It is the EventHandler to be\n     * called for the audioprocess event that is dispatched to ScriptProcessorNode node types.\n     * @param {AudioProcessingEvent} audioProcessingEvent - The audio processing event.\n     */\n    this.node.onaudioprocess = function(audioProcessingEvent) {\n      if (!self.recording) {\n        return;\n      }\n\n      worker.postMessage({\n        command: 'record',\n        buffer: [\n          audioProcessingEvent.inputBuffer.getChannelData(0),\n        ]\n      });\n      self.startSilenceDetection();\n    };\n\n    this.analyser = source.context.createAnalyser();\n    this.analyser.minDecibels = -90;\n    this.analyser.maxDecibels = -10;\n    this.analyser.smoothingTimeConstant = 0.85;\n\n    source.connect(this.analyser);\n    this.analyser.connect(this.node);\n    this.node.connect(source.context.destination);\n  }\n\n  /**\n   * Sets the silence and viz callbacks, resets the silence start time, and sets recording to true.\n   * @param {?onSilenceCallback} onSilence - Called when silence is detected.\n   */\n  record(onChunkedAudio, onSilence) {\n    this.silenceCallback = onSilence;\n    this.onChunkedAudio = onChunkedAudio;\n    this.start = Date.now();\n    this.recording = true;\n  };\n\n  /**\n   * Sets recording to false.\n   */\n  stop() {\n    this.recording = false;\n  };\n\n  /**\n   * Posts \"clear\" message to the worker.\n   */\n  clear() {\n    worker.postMessage({ command: 'clear' });\n  };\n\n\n  /**\n   * Checks the time domain data to see if the amplitude of the sound waveform is more than\n   * 0.01 or less than -0.01. If it is, \"noise\" has been detected and it resets the start time.\n   * If the elapsed time reaches 1 second the silence callback is called.\n   */\n  startSilenceDetection() {\n    this.analyser.fftSize = 2048;\n    let bufferLength = this.analyser.fftSize;\n    let dataArray = new Uint8Array(bufferLength);\n\n    this.analyser.getByteTimeDomainData(dataArray);\n\n    if (this.visualizer) {\n      this.visualizer.visualizeAudioBuffer(dataArray, bufferLength);\n    }\n\n    let curr_value_time = (dataArray[0] / 128) - 1.0;\n\n    if (curr_value_time > 0.01 || curr_value_time < -0.01) {\n      this.start = Date.now();\n    }\n    let newtime = Date.now();\n    let elapsedTime = newtime - this.start;\n    if (elapsedTime > 1000) {\n      this.silenceCallback();\n    }\n  };\n}\n\nclass AudioRecorder {\n  constructor(visualizer) {\n    this.audioContext = undefined;\n    this.visualizer = visualizer;\n    this.audioStream = null;\n  }\n  /**\n   * Creates an audio context and calls getUserMedia to request the mic (audio).\n   * If the user denies access to the microphone, the returned Promise rejected\n   * with a PermissionDeniedError\n   * @returns {Promise}\n   */\n  requestDevice() {\n\n    if (typeof this.audioContext === 'undefined') {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      this.audioContext = new AudioContext();\n    }\n\n    let self = this;\n    return new Promise(function(resolve, reject) {\n      getUserMedia({video: false, audio: true}, function (err, stream) {\n        // if the browser doesn't support user media\n        // or the user says \"no\" the error gets passed\n        // as the first argument.\n        if (err) {\n          reject(new Error('getUserMedia is not implemented in this browser'));\n        } else {\n          self.audioStream = stream;\n          resolve();\n        }\n      });\n    });\n  };\n\n  createRecorder() {\n    let source = this.audioContext.createMediaStreamSource(this.audioStream, worker);\n    return new Recorder(source, this.visualizer);\n  };\n}\n\nexport default AudioRecorder;\n","/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\n * software and associated documentation files (the \"Software\"), to deal in the Software\n * without restriction, including without limitation the rights to use, copy, modify,\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/* globals requestAnimationFrame */\n\nclass Renderer {\n  constructor(canvas) {\n    if (canvas) {\n      this.canvas = canvas;\n      this.canvasCtx = canvas.getContext('2d');\n      this.listening = true;\n    }\n  }\n\n  /**\n   * Clears the canvas element.\n   */\n  clearCanvas() {\n    if (!this.canvas) return;\n    this.canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n    this.listening = false;\n  };\n\n  /**\n   * Sets the listening flag to true.\n   */\n  prepCanvas() {\n    this.listening = true;\n  };\n\n  /**\n   * Clears the canvas and draws the dataArray.\n   * @param {Uint8Array} dataArray - The time domain audio data to visualize.\n   * @param {number} bufferLength - The FFT length.\n   */\n  visualizeAudioBuffer(dataArray, bufferLength) {\n    if (!this.canvas) return;\n    var WIDTH = this.canvas.width;\n    var HEIGHT = this.canvas.height;\n    var animationId;\n    this.canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);\n\n    /**\n     * Will be called at about 60 times per second. If listening, draw the dataArray.\n     */\n    let self = this;\n    function draw() {\n      if (!self.listening) {\n        return;\n      }\n\n      self.canvasCtx.fillStyle = 'rgb(249,250,252)';\n      self.canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n      self.canvasCtx.lineWidth = 1;\n      self.canvasCtx.strokeStyle = 'rgb(0,125,188)';\n      self.canvasCtx.beginPath();\n\n      var sliceWidth = WIDTH * 1.0 / bufferLength;\n      var x = 0;\n\n      for (var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] / 128.0;\n        var y = v * HEIGHT / 2;\n        if (i === 0) {\n          self.canvasCtx.moveTo(x, y);\n        } else {\n          self.canvasCtx.lineTo(x, y);\n        }\n        x += sliceWidth;\n      }\n\n      self.canvasCtx.lineTo(self.canvas.width, self.canvas.height / 2);\n      self.canvasCtx.stroke();\n    }\n\n    // Register our draw function with requestAnimationFrame.\n    if (typeof animationId === 'undefined') {\n      animationId = requestAnimationFrame(draw);\n    }\n  };\n}\n\nexport default Renderer;","/* jshint esnext: true */\n/* globals module */\n/* globals define */\n/* globals ttsAudio  */\n\nclass AudioControl {\n  constructor(audioRecorder) {\n    this.audioRecorder = audioRecorder;\n  }\n\n  /**\n   * Clears the previous buffer and starts buffering audio.\n   * @param {?onSilenceCallback} onSilence - Called when silence is detected.\n   */\n  startRecording(onSilence, onChunkedAudio) {\n    this.recorder = this.audioRecorder.createRecorder();\n    this.recorder.record(onSilence, onChunkedAudio);\n  };\n\n  /**\n   * Stops buffering audio.\n   */\n  stopRecording() {\n    this.recorder.stop();\n  };\n\n  /**\n   * On playback complete callback: `onPlaybackComplete`.\n   *\n   * @callback onPlaybackComplete\n   */\n\n  /**\n   * Plays the audio buffer with an HTML5 audio tag.\n   * @param {Uint8Array} buffer - The audio buffer to play.\n   * @param {?onPlaybackComplete} callback - Called when audio playback is complete.\n   */\n  play(buffer, callback) {\n    var myBlob = new Blob([buffer], { type: 'audio/mpeg' });\n    var audio = document.createElement('audio');\n    var objectUrl = window.URL.createObjectURL(myBlob);\n    audio.src = objectUrl;\n    audio.addEventListener('ended', function() {\n      audio.currentTime = 0;\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n    audio.play();\n    this.recorder.clear();\n  };\n\n  /**\n   * On audio supported callback: `onAudioSupported`.\n   *\n   * @callback onAudioSupported\n   * @param {boolean}\n   */\n\n  /**\n   * Checks that getUserMedia is supported and the user has given us access to the mic.\n   * @param {onAudioSupported} callback - Called with the result.\n   */\n  supportsAudio(callback) {\n    if (navigator.mediaDevices.getUserMedia) {\n      this.audioRecorder.requestDevice()\n        .then(() => { callback(true); })\n        .catch(() => { callback(false); });\n    } else {\n      callback(false);\n    }\n  };\n}\n\nexport default AudioControl;","import AudioRecorder from './recorder';\nimport Renderer from './renderer';\nimport AudioControl from './control';\nimport BinaryClient from 'binaryjs-client';\nimport EventEmitter from \"events\";\n\nclass Client {\n  constructor(serverUrl, canvas) {\n    this.emitter = new EventEmitter();\n    this.svc = new SpeechToText(serverUrl, canvas, this.emitter);\n  }\n\n  on(type, listener) {\n    this.emitter.addListener(type, listener);\n  }\n\n  startListening() {\n    this.svc.startListening();\n  }\n}\n\nconst SpeechToText = (serverUrl, canvas, emitter) => {\n\n  let renderer = new Renderer(canvas);\n  const audioRecorder = new AudioRecorder(renderer);\n  const audioControl = new AudioControl(audioRecorder);\n  let client, bStream, conversation, timer;\n\n  function startListening() {\n    if (conversation)\n      conversation.advanceConversation();\n  }\n\n  function Conversation() {\n    let currentState;\n\n    this.renderer = renderer;\n\n    this.statusTypes = Object.freeze({\n      READY: 'Ready',\n      LISTENING: 'Listening',\n      TRANSCRIBED: 'Transcribed'\n    });\n\n    this.onSilence = function() {\n      console.log(\"onSilence\");\n      if (timer) return;\n\n      //Timeout in case we don't get a quick response from the server\n      timer = setTimeout(() => {\n        console.log(\"timed out\");\n        currentState.state.setResponse(null);\n      }, 5000);\n    };\n\n    this.onChunkedAudio = function(buffer) {\n      if (!buffer) return;\n      if (bStream && bStream.writable)\n        bStream.write(buffer);\n    };\n\n    this.transition = function(conversation) {\n      currentState = conversation;\n      var state = currentState.state;\n\n      if (state.status === state.statusTypes.TRANSCRIBED) {\n        currentState.advanceConversation();\n      }\n    };\n\n    this.advanceConversation = function() {\n      currentState.advanceConversation();\n    };\n\n    currentState = new Initial(this);\n  }\n\n  function Initial(state) {\n    this.state = state;\n    state.status = state.statusTypes.READY;\n    emitter.emit(\"state\", state.statusTypes.READY);\n\n    this.advanceConversation = function() {\n      renderer.prepCanvas();\n\n      const sampleRate = 16000;\n      let isClientOpen = false;\n\n      timer = null;\n      client = new BinaryClient.BinaryClient(serverUrl);\n      client.on('open', function () {\n        console.log(\"client opened\");\n\n        bStream = client.createStream({sampleRate: sampleRate});\n        bStream.on('data', function(data){\n          setResponse(data.message);\n        });\n      });\n\n      client.on('error', function(e) {\n        clearTimeout(timer);\n        setResponse(null);\n      });\n\n      function setResponse (message) {\n        clearTimeout(timer);\n        state.result = message;\n\n        isClientOpen = false;\n        if (isClientOpen) {\n          client.close();\n        }\n\n        audioControl.stopRecording();\n        state.renderer.clearCanvas();\n        state.transition(new Transcribed(state));\n      }\n      state.setResponse = setResponse;\n\n      audioControl.startRecording(state.onChunkedAudio, state.onSilence);\n      state.transition(new Listening(state));\n    }\n  }\n\n  function Listening(state) {\n    this.state = state;\n    state.status = state.statusTypes.LISTENING;\n    emitter.emit(\"state\", state.statusTypes.LISTENING);\n    this.advanceConversation = function() {\n      // audioControl.exportWAV(function(blob) {\n      //   state.audioInput = blob;\n      //   state.transition(new Sending(state));\n      // });\n      state.transition(new Transcribed(state));\n    }\n  }\n\n  function Transcribed(state) {\n    this.state = state;\n    state.status = state.statusTypes.TRANSCRIBED;\n    emitter.emit(\"state\", state.statusTypes.TRANSCRIBED);\n    emitter.emit(\"result\", state.result);\n    this.advanceConversation = function() {\n      client.close();\n\n      state.transition(new Initial(state));\n    }\n  }\n\n  audioControl.supportsAudio(function(supported) {\n    if (supported) {\n      conversation = new Conversation();\n      emitter.emit(\"supported\", true);\n    } else {\n      emitter.emit(\"supported\", false);\n    }\n  });\n\n  return {\n    startListening: startListening\n  }\n};\n\nexport default Client;\n//(function(ttsAudio) { ttsAudio.Client = Client; })(ttsAudio);\n"],"names":["worker","Worker","getUserMedia","require","Recorder","source","visualizer","recording","node","context","createScriptProcessor","self","onmessage","message","buffer","data","onChunkedAudio","postMessage","sampleRate","clear","onaudioprocess","audioProcessingEvent","inputBuffer","getChannelData","startSilenceDetection","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","connect","destination","onSilence","silenceCallback","start","Date","now","command","fftSize","bufferLength","dataArray","Uint8Array","getByteTimeDomainData","visualizeAudioBuffer","curr_value_time","newtime","elapsedTime","AudioRecorder","audioContext","undefined","audioStream","AudioContext","window","webkitAudioContext","resolve","reject","video","audio","err","stream","Error","createMediaStreamSource","Renderer","canvas","canvasCtx","getContext","listening","clearRect","width","height","WIDTH","HEIGHT","animationId","draw","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","requestAnimationFrame","AudioControl","audioRecorder","recorder","createRecorder","record","stop","callback","myBlob","Blob","type","document","createElement","objectUrl","URL","createObjectURL","src","addEventListener","currentTime","play","navigator","mediaDevices","requestDevice","then","catch","Client","serverUrl","emitter","EventEmitter","svc","SpeechToText","listener","addListener","startListening","renderer","audioControl","client","bStream","conversation","timer","advanceConversation","Conversation","currentState","statusTypes","log","setTimeout","state","setResponse","writable","write","transition","status","TRANSCRIBED","Initial","READY","emit","prepCanvas","isClientOpen","BinaryClient","on","createStream","e","result","close","stopRecording","clearCanvas","Transcribed","startRecording","Listening","LISTENING","supportsAudio","supported"],"mappings":"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"}